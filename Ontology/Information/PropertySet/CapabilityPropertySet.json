{
  "@id": "dtmi:digitaltwins:rec_3_3:device:CapabilityPropertySet;1",
  "@type": "Interface",
  "contents": [
    {
      "@type": "Property",
      "description": {
        "en": "Operational mode for HVAC equipment (Project Haystack)."
      },
      "displayName": {
        "en": "HVAC mode"
      },
      "name": "HVACMode",
      "dtmi:dtdl:property:schema;2": {
        "@type": "Enum",
        "dtmi:dtdl:property:enumValues;2": [
          {
            "enumValue": "Cooldown",
            "name": "Cooldown"
          },
          {
            "enumValue": "Cooling",
            "name": "Cooling"
          },
          {
            "enumValue": "Depressurize",
            "name": "Depressurize"
          },
          {
            "enumValue": "Economizing",
            "name": "Economizing"
          },
          {
            "enumValue": "Heating",
            "name": "Heating"
          },
          {
            "enumValue": "Manual",
            "name": "Manual"
          },
          {
            "enumValue": "Pressurize",
            "name": "Pressurize"
          },
          {
            "enumValue": "Purge",
            "name": "Purge"
          },
          {
            "enumValue": "Reheat",
            "name": "Reheat"
          },
          {
            "enumValue": "Warmup",
            "name": "Warmup"
          }
        ],
        "valueSchema": "string"
      },
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "Notification of a condition which requires attention such as a threshold exceeded (Project Haystack). This differs from a Fault in that a Fault is used to identify a failure."
      },
      "displayName": {
        "en": "alarm"
      },
      "name": "alarm",
      "schema": "boolean",
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "The component that is part of an asset which the capability is associated with."
      },
      "displayName": {
        "en": "asset component"
      },
      "name": "assetComponent",
      "dtmi:dtdl:property:schema;2": {
        "@type": "Enum",
        "dtmi:dtdl:property:enumValues;2": [
          {
            "enumValue": "Battery",
            "name": "Battery"
          },
          {
            "enumValue": "Coil",
            "name": "Coil"
          },
          {
            "enumValue": "Compressor",
            "name": "Compressor"
          },
          {
            "enumValue": "Condenser",
            "name": "Condenser"
          },
          {
            "enumValue": "Damper",
            "name": "Damper"
          },
          {
            "enumValue": "Evaporator",
            "name": "Evaporator"
          },
          {
            "enumValue": "Fan",
            "name": "Fan"
          },
          {
            "enumValue": "Filter",
            "name": "Filter"
          },
          {
            "enumValue": "Motor",
            "name": "Motor"
          },
          {
            "enumValue": "VFD",
            "name": "VFD"
          },
          {
            "enumValue": "coolingCoil",
            "name": "coolingCoil"
          },
          {
            "enumValue": "heatingCoil",
            "name": "heatingCoil"
          }
        ],
        "valueSchema": "string"
      },
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "Rate required for a process. For a setpoint, this sets the required rate for a process such as cooling, heating, air flow, or water flow. For a sensor, this measures the rate of a process over a given interval such as electrical power demand or cooling energy demand."
      },
      "displayName": {
        "en": "demand"
      },
      "name": "demand",
      "schema": "boolean",
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "Current control setpoint in effect taking into account other factors (Project Haystack)."
      },
      "displayName": {
        "en": "effective"
      },
      "name": "effective",
      "schema": "boolean",
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "Phase measurement in a three-phase electrical system (Project Haystack)."
      },
      "displayName": {
        "en": "electrical phase"
      },
      "name": "electricalPhase",
      "dtmi:dtdl:property:schema;2": {
        "@type": "Enum",
        "dtmi:dtdl:property:enumValues;2": [
          {
            "enumValue": "A",
            "name": "A"
          },
          {
            "enumValue": "AB",
            "name": "AB"
          },
          {
            "enumValue": "B",
            "name": "B"
          },
          {
            "enumValue": "BC",
            "name": "BC"
          },
          {
            "enumValue": "C",
            "name": "C"
          },
          {
            "enumValue": "CA",
            "name": "CA"
          },
          {
            "enumValue": "N",
            "name": "N"
          }
        ],
        "valueSchema": "string"
      },
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "Parameter that places and upper (maximum) or lower (minimum) bound on permitted values of another capability."
      },
      "displayName": {
        "en": "limit"
      },
      "name": "limit",
      "dtmi:dtdl:property:schema;2": {
        "@type": "Enum",
        "dtmi:dtdl:property:enumValues;2": [
          {
            "enumValue": "Maximum",
            "name": "Maximum"
          },
          {
            "enumValue": "Minimum",
            "name": "Minimum"
          }
        ],
        "valueSchema": "string"
      },
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "Mode which defines how to control a space based on occupancy status."
      },
      "displayName": {
        "en": "occupancy mode"
      },
      "name": "occupancyMode",
      "dtmi:dtdl:property:schema;2": {
        "@type": "Enum",
        "dtmi:dtdl:property:enumValues;2": [
          {
            "enumValue": "Occupied",
            "name": "Occupied"
          },
          {
            "enumValue": "Standby",
            "name": "Standby"
          },
          {
            "enumValue": "Unoccupied",
            "name": "Unoccupied"
          }
        ],
        "valueSchema": "string"
      },
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "The phenomenon that a capability measures or interacts with; e.g., a TemperatureSensor can measure air temperature or water temperature, a Flow Demand Setpoint can be configured to control steam demand or chilled water demand, etc."
      },
      "displayName": {
        "en": "phenomenon"
      },
      "name": "phenomenon",
      "dtmi:dtdl:property:schema;2": {
        "@type": "Enum",
        "dtmi:dtdl:property:enumValues;2": [
          {
            "enumValue": "ACElectricity",
            "name": "ACElectricity"
          },
          {
            "enumValue": "Air",
            "name": "Air"
          },
          {
            "enumValue": "BlowdownWater",
            "name": "BlowdownWater"
          },
          {
            "enumValue": "ChilledWater",
            "name": "ChilledWater"
          },
          {
            "enumValue": "Cloudage",
            "name": "Cloudage"
          },
          {
            "enumValue": "ColdDomesticWater",
            "name": "ColdDomesticWater"
          },
          {
            "enumValue": "CompressedAir",
            "name": "CompressedAir"
          },
          {
            "enumValue": "Condensate",
            "name": "Condensate"
          },
          {
            "enumValue": "CondenserWater",
            "name": "CondenserWater"
          },
          {
            "enumValue": "DCElectricity",
            "name": "DCElectricity"
          },
          {
            "enumValue": "Data",
            "name": "Data"
          },
          {
            "enumValue": "DeionizedWater",
            "name": "DeionizedWater"
          },
          {
            "enumValue": "DieselFuel",
            "name": "DieselFuel"
          },
          {
            "enumValue": "Drainage",
            "name": "Drainage"
          },
          {
            "enumValue": "DriveElectricity",
            "name": "DriveElectricity"
          },
          {
            "enumValue": "Electricity",
            "name": "Electricity"
          },
          {
            "enumValue": "EthernetData",
            "name": "EthernetData"
          },
          {
            "enumValue": "ExhaustGas",
            "name": "ExhaustGas"
          },
          {
            "enumValue": "Fire",
            "name": "Fire"
          },
          {
            "enumValue": "FreezingRainPrecipitation",
            "name": "FreezingRainPrecipitation"
          },
          {
            "enumValue": "FrostIce",
            "name": "FrostIce"
          },
          {
            "enumValue": "Fuel",
            "name": "Fuel"
          },
          {
            "enumValue": "FuelOilFuel",
            "name": "FuelOilFuel"
          },
          {
            "enumValue": "GasolineFuel",
            "name": "GasolineFuel"
          },
          {
            "enumValue": "HailPrecipitation",
            "name": "HailPrecipitation"
          },
          {
            "enumValue": "HighTemperatureHotWater",
            "name": "HighTemperatureHotWater"
          },
          {
            "enumValue": "HotDomesticWater",
            "name": "HotDomesticWater"
          },
          {
            "enumValue": "HotWater",
            "name": "HotWater"
          },
          {
            "enumValue": "Ice",
            "name": "Ice"
          },
          {
            "enumValue": "InfraredLight",
            "name": "InfraredLight"
          },
          {
            "enumValue": "IrrigationWater",
            "name": "IrrigationWater"
          },
          {
            "enumValue": "Light",
            "name": "Light"
          },
          {
            "enumValue": "LiquidPropaneFuel",
            "name": "LiquidPropaneFuel"
          },
          {
            "enumValue": "LowTemperatureHotWater",
            "name": "LowTemperatureHotWater"
          },
          {
            "enumValue": "MakeupWater",
            "name": "MakeupWater"
          },
          {
            "enumValue": "MediumTemperatureHotWater",
            "name": "MediumTemperatureHotWater"
          },
          {
            "enumValue": "NaturalGasFuel",
            "name": "NaturalGasFuel"
          },
          {
            "enumValue": "NonPotableDomesticWater",
            "name": "NonPotableDomesticWater"
          },
          {
            "enumValue": "Object",
            "name": "Object"
          },
          {
            "enumValue": "People",
            "name": "People"
          },
          {
            "enumValue": "Precipitation",
            "name": "Precipitation"
          },
          {
            "enumValue": "RainPrecipitation",
            "name": "RainPrecipitation"
          },
          {
            "enumValue": "Refrigerant",
            "name": "Refrigerant"
          },
          {
            "enumValue": "SleetPrecipitation",
            "name": "SleetPrecipitation"
          },
          {
            "enumValue": "Smoke",
            "name": "Smoke"
          },
          {
            "enumValue": "SnowPrecipitation",
            "name": "SnowPrecipitation"
          },
          {
            "enumValue": "Solar",
            "name": "Solar"
          },
          {
            "enumValue": "Sound",
            "name": "Sound"
          },
          {
            "enumValue": "SprinklerWater",
            "name": "SprinklerWater"
          },
          {
            "enumValue": "Steam",
            "name": "Steam"
          },
          {
            "enumValue": "StormDrainage",
            "name": "StormDrainage"
          },
          {
            "enumValue": "UltravioletLight",
            "name": "UltravioletLight"
          },
          {
            "enumValue": "Urea",
            "name": "Urea"
          },
          {
            "enumValue": "WasteVentDrainage",
            "name": "WasteVentDrainage"
          },
          {
            "enumValue": "Water",
            "name": "Water"
          },
          {
            "enumValue": "WiFiData",
            "name": "WiFiData"
          },
          {
            "enumValue": "Wind",
            "name": "Wind"
          }
        ],
        "valueSchema": "string"
      },
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "The capability position relative to the system or space that it interacts with. E.g., a water temperature sensor can be positioned on the supply or return flow, air humidity can be measured entering or leaving a system, etc."
      },
      "displayName": {
        "en": "position"
      },
      "name": "position",
      "dtmi:dtdl:property:schema;2": {
        "@type": "Enum",
        "dtmi:dtdl:property:enumValues;2": [
          {
            "enumValue": "Azimuth",
            "name": "Azimuth"
          },
          {
            "enumValue": "Bypass",
            "name": "Bypass"
          },
          {
            "enumValue": "Circulating",
            "name": "Circulating"
          },
          {
            "enumValue": "Delta",
            "name": "Delta"
          },
          {
            "enumValue": "Discharge",
            "name": "Discharge"
          },
          {
            "enumValue": "Download",
            "name": "Download"
          },
          {
            "enumValue": "Economizer",
            "name": "Economizer"
          },
          {
            "enumValue": "Entering",
            "name": "Entering"
          },
          {
            "enumValue": "Exhaust",
            "name": "Exhaust"
          },
          {
            "enumValue": "Export",
            "name": "Export"
          },
          {
            "enumValue": "Header",
            "name": "Header"
          },
          {
            "enumValue": "Import",
            "name": "Import"
          },
          {
            "enumValue": "Input",
            "name": "Input"
          },
          {
            "enumValue": "Inside",
            "name": "Inside"
          },
          {
            "enumValue": "Leaving",
            "name": "Leaving"
          },
          {
            "enumValue": "Mixed",
            "name": "Mixed"
          },
          {
            "enumValue": "Net",
            "name": "Net"
          },
          {
            "enumValue": "Output",
            "name": "Output"
          },
          {
            "enumValue": "Outside",
            "name": "Outside"
          },
          {
            "enumValue": "Return",
            "name": "Return"
          },
          {
            "enumValue": "Supply",
            "name": "Supply"
          },
          {
            "enumValue": "Underfloor",
            "name": "Underfloor"
          },
          {
            "enumValue": "Upload",
            "name": "Upload"
          },
          {
            "enumValue": "Zenith",
            "name": "Zenith"
          },
          {
            "enumValue": "Zone",
            "name": "Zone"
          }
        ],
        "valueSchema": "string"
      },
      "writable": true
    },
    {
      "@type": "Property",
      "description": {
        "en": "Stage number of a control loop for an equipment, equipment group, or system that is defined by the process controller. The first stage is 1, second stage 2, etc. (Project Haystack)."
      },
      "displayName": {
        "en": "stage"
      },
      "name": "stage",
      "schema": "integer",
      "writable": true
    }
  ],
  "description": {
    "en": "Encapuslates a set of categorization properties that may be applicable to Capability instances."
  },
  "displayName": {
    "en": "Capability property set"
  },
  "extends": "dtmi:digitaltwins:rec_3_3:core:PropertySet;1",
  "@context": "dtmi:dtdl:context;2"
}